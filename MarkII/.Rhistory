add_polygons(line = list(width = 0.4)) %>%
add_polygons(
fillcolor = 'transparent',
line = list(color = 'black', width = 0.5),
showlegend = FALSE, hoverinfo = 'none'
) %>%
layout(
title = "Miami Crime Categories",
titlefont = list(size = 10),
xaxis = list(title = "", showgrid = FALSE,
zeroline = FALSE, showticklabels = FALSE),
yaxis = list(title = "", showgrid = FALSE,
zeroline = FALSE, showticklabels = FALSE)
)
newmap <- get_map(location = "miami", source = "google")
c1_count %>%
slice(21:50) %>%
mutate(share = n/sum(n),
c1 = reorder(charge1,share)) %>%
ggplot(aes(x=charge1,y=share, fill = charge1)) + geom_col() +
coord_flip() +
xlab("charges") +
ylab("share") +
theme(legend.position='none')
newmap <- get_map(location = "miami", source = "google")
ggmap(newmap) +
geom_point(aes(x=location1$longitude, y=location1$latitude), data = location1)
c %>%
group_by(charge_categories1) %>%
plot_ly(x = ~location1$longitude, y = ~location1$latitude, color = ~charge_categories1, colors = c('#ffeda0','#f03b20'),
hoverinfo = 'text') %>%
add_polygons(line = list(width = 0.4)) %>%
add_polygons(
fillcolor = 'transparent',
line = list(color = 'black', width = 0.5),
showlegend = FALSE, hoverinfo = 'none'
) %>%
layout(
title = "Miami Crime Categories",
titlefont = list(size = 10),
xaxis = list(title = "", showgrid = FALSE,
zeroline = FALSE, showticklabels = FALSE),
yaxis = list(title = "", showgrid = FALSE,
zeroline = FALSE, showticklabels = FALSE)
)
fixed_corrections <- bind_cols(c,location1)
fixed_corrections %>%
group_by(charge_categories1) %>%
plot_ly(x = ~longitude, y = ~latitude, color = ~charge_categories1, colors = c('#ffeda0','#f03b20'),
hoverinfo = 'text') %>%
add_polygons(line = list(width = 0.4)) %>%
add_polygons(
fillcolor = 'transparent',
line = list(color = 'black', width = 0.5),
showlegend = FALSE, hoverinfo = 'none'
) %>%
layout(
title = "Miami Crime Categories",
titlefont = list(size = 10),
xaxis = list(title = "", showgrid = FALSE,
zeroline = FALSE, showticklabels = FALSE),
yaxis = list(title = "", showgrid = FALSE,
zeroline = FALSE, showticklabels = FALSE)
)
head(fixed_corrections)
library("maps", lib.loc="~/Library/R/3.4/library")
map("county", "florida", fill = T, col = palette())
library("maptools", lib.loc="~/Library/R/3.4/library")
mia_dist <- readShapeSpatial("https://gisms.miamidade.gov/ArcGIS/rest/services/WGS84/LandInformation_ZipCode/MapServer/0/query?outFields=*&where=1%3D1")
plot(mia_dist)
mia_dist <- readShapeSpatial("/Users/Gav/Desktop/Datasets/Zip_Code")
plot(mia_dist)
setwd("~/Desktop/Datasets/Zip_Code")
mia_dist <- readShapeSpatial("Zip_Code.shp")
plot(mia_dist)
mia_dist <- fortify(mia_dist, region = "Miami-Dade")
ggplot() + geom_map(data = fixed_corrections, aes(fill = charge_categories1),
map = mia_dist) + expand_limits(x = mia_dist$long, y = mia_dist$lat)
mia_dist <- readShapeSpatial("Zip_Code.shp")
ggplot() + geom_map(data = fixed_corrections, aes(fill = charge_categories1),
map = mia_dist) + expand_limits(x = mia_dist$long, y = mia_dist$lat)
ggplot() + geom_map(data = fixed_corrections, aes(fill = charge_categories1),
map = location1) + expand_limits(x = mia_dist$long, y = mia_dist$lat)
ggplot() + geom_map(data = fixed_corrections, aes(fill = charge_categories1),
map = location1) + expand_limits(x = mia_dist$long, y = mia_dist$lat)
ggplot() + geom_map(data = fixed_corrections, aes(fill = charge_categories1),
map = fixed_corrections) + expand_limits(x = mia_dist$long, y = mia_dist$lat)
map( "world", ylim=c(-60,90) )
ggplot() + geom_map(data = fixed_corrections, aes(fill = charge_categories1),
map = location1) + expand_limits(x = mia_dist$long, y = mia_dist$lat)
mia_dist <- fortify(mia_dist, region = "florida")
mia_dist <- fortify(mia_dist, region = "miami")
str(fixed_corrections)
c$bookdate <- gsub("T", "", c$bookdate)
c$bookdate
c$bookdate <- as.Date(c$bookdate, "%Y-%m-%dh:m:s")
str(c)
head(c$bookdate)
c$bookdate
c$dob
source('~/Desktop/MiamiOpenData.R', echo=TRUE)
time_fix <- sapply(c$bookdate,gsub,pattern="t",replacement=" ")
time_fix
time_fix <- sapply(c$bookdate,gsub,pattern="T",replacement=" ")
time_fix
c$bookdate <- sapply(c$bookdate,gsub,pattern="T",replacement=" ")
c$bookdate <- as.Date(c$bookdate, "%Y-%m-%d h:m:s")
c$bookdate
c <- fromJSON("https://opendata.miamidade.gov/resource/k7xd-qgzt.json")
location_table <- c$location_1
location <- as.data.frame(location_table)
location1 <- location %>% separate(coordinates, into = c("longtitude", "latitude"), sep = ", ")
location1$latitude <- gsub("[^-.[[:digit:]]","",location1$latitude)
location1$longitude <- gsub("[^-.[[:digit:]]","",location1$longitude)
location1$latitude <- as.numeric(location1$latitude)
location1$longitude <- as.numeric(location1$longitude)
c$location_1 <- NULL
c$bookdate <- sapply(c$bookdate,gsub,pattern="T",replacement=" ")
c$bookdate
c$bookdate <- as.Date(c$bookdate, "%Y-%m-%d %H:%M:%S.%S")
c$bookdate
str(c)
c$charge1 <- str_replace_all(c$charge1, " ", "_")
c$charge2 <- str_replace_all(c$charge2, " ", "_")
c$charge3 <- str_replace_all(c$charge3, " ", "_")
c$charge1
str(c)
c %>% gather(charge, type, c(charge1,charge2,charge3) )
blend <- c %>% gather(charge, type, c(charge1,charge2,charge3) )
tail(blend)
head(blend, 50)
head(blend, 50:150)
head(blend, 100)
#############Categorize Charges###################
blend <- mutate(blend, blend$type = derivedFactor(
"Drug Possession" = c$charge1 %in% c("DRUG_PARAPHERNA/POSN", "MARIJUANA/POSSESSION", "CANNABIS/POSN/0-20", "CANN/SELL/POSN_W/INT", "COCAINE/POSSESSION", "CONT_SUBS/POSS" ),
"Selling Drugs" = c$charge1 %in% c("HER/SELL/DEL_W/INT", "COKE/SELL/DEL/CONSPI", "OXYCODON/TR/25>/<100", "COCAINE/SELL/MAN/ATT"),
"Alcohol" = c$charge1 %in% c("ALC_BEV/DRK_IN_PUBLC", "BOATING_UNDER_INFLU", "DUI/BREATH_LEVEL", "ALC/OPN_CNTR/POSN", "DUI/DWI/TEST/2ND>", "DISORDERLY_INTOX", "DUI/DAM/PROP/PERSON", "DUI"),
"Theft/Robbery" = c$charge1 %in% c("BURGLARY/OCC/DWELL","ROBBERY/STRNGARM/ATT", "STOLEN_PROP/DEAL_IN", "PETIT_THEFT_1D","RETAIL_THEFT/300>", "BURGLARY/UNOCC_CONVY", "RETAIL_THFT/PRI_CON", "STOLEN_PROP/DEAL_IN", "ROBBERY/STRONGARM", "BURG/ASLT/BATT_-_PBL", "GRD_THEFT/3D/VEHICLE", "ROBB/SUDDEN_SNATCH"),
"Sexual Assault" = c$charge1 %in% c("SEX_BAT/ON_MINOR/ADT", "SEX_ACTIVITY/MINOR"),
"Domestic Violence" = c$charge1 %in% c("CHILD_ABUSE/NO_HARM", "BATT/DOM/STRANGLE", "PRTRL_REL/DOM_VIOL"),
"Weapon Charge" = c$charge1 %in% c("CONCEALED_F/A_/CARRY", "CONCEALED_WEAP/CARRY"),
"Trespassing" = c$charge1 %in% c("TRESPASS/PROPERTY", "TRES_PROP/AFTER_WARN"),
"Warrant" = c$charge1 %in% c("BENCH_WARRANT", "PROBATION_WARRANT", "FUG_WARR/OUT_O_STATE", "OUT-OF-CNTY/WARRANT", "ALIAS_CAPIAS"),
"Murder" = c$charge1 %in% c("MURDER_1ST/DWEAP/ATT"),
"Assult/Battery" = c$charge1 %in% c("BATTERY", "BATTERY/AGG/DWEAP", "ABUSE/ELD/DISA/ADULT", "ASSAULT/AGGRAVATED", "ASSAULT/AGG/FIREARM", "BATTERY/ELDERLY", "BATTERY/LEO/COR/FIRE"),
"Obstructing Justice" = c$charge1 %in% c("RESIST_OFF_W/O_VIOL", "FLEE/ELUDE_PO/LTS/SR", "OBSTRT/DISGUISE_PERS", "FLEE/ELUDE_PO/LTS/SR"),
"Fraud" = c$charge1 %in% c("DEFRAUD_INN/0-300", "INS_CLM/FALSE/CONSP", "UTTERING_FORGED_BILL", "ORGANIZED_FRAUD/50K+", "CREDIT_CARD/FORGERY", "ORGANIZED_FRD/0-20K", "DEFRAUD_INN/300+"),
"Probation" = c$charge1 %in% c("OUT_ON_PROBATION"),
"Public Disorder" = c$charge1 %in% c("INDECENT_EXPOSURE", "URINATE/DEFE/PUB_PLA", "LOITERING_OR_PROWL", "PANHANDLING/BEG/SOL", "PANHANDLE/AGGR/OBSTR", "L&L_EXHIB_<16_BY_18>"),
"Violating Regulation" = c$charge1 %in% c("DWLS/KNOWINGLY", "EMER/COMM/911/MISUSE", "FLS_NAME/ID/AFT_ARRE", "REG/EXP/>6MOS/SUB_OF", "NO_VALID_DRIVERS_LIC", "DWLS/HABITUAL", "REG/ADDR_CHANGE", "ID/USE_TO_HARASS"),
.default = "Miscellaneous"
))
#############Categorize Charges###################
blend <- mutate(blend, categories = derivedFactor(
"Drug Possession" = c$charge1 %in% c("DRUG_PARAPHERNA/POSN", "MARIJUANA/POSSESSION", "CANNABIS/POSN/0-20", "CANN/SELL/POSN_W/INT", "COCAINE/POSSESSION", "CONT_SUBS/POSS" ),
"Selling Drugs" = c$charge1 %in% c("HER/SELL/DEL_W/INT", "COKE/SELL/DEL/CONSPI", "OXYCODON/TR/25>/<100", "COCAINE/SELL/MAN/ATT"),
"Alcohol" = c$charge1 %in% c("ALC_BEV/DRK_IN_PUBLC", "BOATING_UNDER_INFLU", "DUI/BREATH_LEVEL", "ALC/OPN_CNTR/POSN", "DUI/DWI/TEST/2ND>", "DISORDERLY_INTOX", "DUI/DAM/PROP/PERSON", "DUI"),
"Theft/Robbery" = c$charge1 %in% c("BURGLARY/OCC/DWELL","ROBBERY/STRNGARM/ATT", "STOLEN_PROP/DEAL_IN", "PETIT_THEFT_1D","RETAIL_THEFT/300>", "BURGLARY/UNOCC_CONVY", "RETAIL_THFT/PRI_CON", "STOLEN_PROP/DEAL_IN", "ROBBERY/STRONGARM", "BURG/ASLT/BATT_-_PBL", "GRD_THEFT/3D/VEHICLE", "ROBB/SUDDEN_SNATCH"),
"Sexual Assault" = c$charge1 %in% c("SEX_BAT/ON_MINOR/ADT", "SEX_ACTIVITY/MINOR"),
"Domestic Violence" = c$charge1 %in% c("CHILD_ABUSE/NO_HARM", "BATT/DOM/STRANGLE", "PRTRL_REL/DOM_VIOL"),
"Weapon Charge" = c$charge1 %in% c("CONCEALED_F/A_/CARRY", "CONCEALED_WEAP/CARRY"),
"Trespassing" = c$charge1 %in% c("TRESPASS/PROPERTY", "TRES_PROP/AFTER_WARN"),
"Warrant" = c$charge1 %in% c("BENCH_WARRANT", "PROBATION_WARRANT", "FUG_WARR/OUT_O_STATE", "OUT-OF-CNTY/WARRANT", "ALIAS_CAPIAS"),
"Murder" = c$charge1 %in% c("MURDER_1ST/DWEAP/ATT"),
"Assult/Battery" = c$charge1 %in% c("BATTERY", "BATTERY/AGG/DWEAP", "ABUSE/ELD/DISA/ADULT", "ASSAULT/AGGRAVATED", "ASSAULT/AGG/FIREARM", "BATTERY/ELDERLY", "BATTERY/LEO/COR/FIRE"),
"Obstructing Justice" = c$charge1 %in% c("RESIST_OFF_W/O_VIOL", "FLEE/ELUDE_PO/LTS/SR", "OBSTRT/DISGUISE_PERS", "FLEE/ELUDE_PO/LTS/SR"),
"Fraud" = c$charge1 %in% c("DEFRAUD_INN/0-300", "INS_CLM/FALSE/CONSP", "UTTERING_FORGED_BILL", "ORGANIZED_FRAUD/50K+", "CREDIT_CARD/FORGERY", "ORGANIZED_FRD/0-20K", "DEFRAUD_INN/300+"),
"Probation" = c$charge1 %in% c("OUT_ON_PROBATION"),
"Public Disorder" = c$charge1 %in% c("INDECENT_EXPOSURE", "URINATE/DEFE/PUB_PLA", "LOITERING_OR_PROWL", "PANHANDLING/BEG/SOL", "PANHANDLE/AGGR/OBSTR", "L&L_EXHIB_<16_BY_18>"),
"Violating Regulation" = c$charge1 %in% c("DWLS/KNOWINGLY", "EMER/COMM/911/MISUSE", "FLS_NAME/ID/AFT_ARRE", "REG/EXP/>6MOS/SUB_OF", "NO_VALID_DRIVERS_LIC", "DWLS/HABITUAL", "REG/ADDR_CHANGE", "ID/USE_TO_HARASS"),
.default = "Miscellaneous"
))
#############Categorize Charges###################
blend <- mutate(blend, categories = derivedFactor(
"Drug Possession" = blend$type %in% c("DRUG_PARAPHERNA/POSN", "MARIJUANA/POSSESSION", "CANNABIS/POSN/0-20", "CANN/SELL/POSN_W/INT", "COCAINE/POSSESSION", "CONT_SUBS/POSS" ),
"Selling Drugs" = blend$type %in% c("HER/SELL/DEL_W/INT", "COKE/SELL/DEL/CONSPI", "OXYCODON/TR/25>/<100", "COCAINE/SELL/MAN/ATT"),
"Alcohol" = blend$type %in% c("ALC_BEV/DRK_IN_PUBLC", "BOATING_UNDER_INFLU", "DUI/BREATH_LEVEL", "ALC/OPN_CNTR/POSN", "DUI/DWI/TEST/2ND>", "DISORDERLY_INTOX", "DUI/DAM/PROP/PERSON", "DUI"),
"Theft/Robbery" = blend$type %in% c("BURGLARY/OCC/DWELL","ROBBERY/STRNGARM/ATT", "STOLEN_PROP/DEAL_IN", "PETIT_THEFT_1D","RETAIL_THEFT/300>", "BURGLARY/UNOCC_CONVY", "RETAIL_THFT/PRI_CON", "STOLEN_PROP/DEAL_IN", "ROBBERY/STRONGARM", "BURG/ASLT/BATT_-_PBL", "GRD_THEFT/3D/VEHICLE", "ROBB/SUDDEN_SNATCH"),
"Sexual Assault" = blend$type %in% c("SEX_BAT/ON_MINOR/ADT", "SEX_ACTIVITY/MINOR"),
"Domestic Violence" = blend$type %in% c("CHILD_ABUSE/NO_HARM", "BATT/DOM/STRANGLE", "PRTRL_REL/DOM_VIOL"),
"Weapon Charge" = blend$type %in% c("CONCEALED_F/A_/CARRY", "CONCEALED_WEAP/CARRY"),
"Trespassing" = blend$type %in% c("TRESPASS/PROPERTY", "TRES_PROP/AFTER_WARN"),
"Warrant" = blend$type %in% c("BENCH_WARRANT", "PROBATION_WARRANT", "FUG_WARR/OUT_O_STATE", "OUT-OF-CNTY/WARRANT", "ALIAS_CAPIAS"),
"Murder" = blend$type %in% c("MURDER_1ST/DWEAP/ATT"),
"Assult/Battery" = blend$type %in% c("BATTERY", "BATTERY/AGG/DWEAP", "ABUSE/ELD/DISA/ADULT", "ASSAULT/AGGRAVATED", "ASSAULT/AGG/FIREARM", "BATTERY/ELDERLY", "BATTERY/LEO/COR/FIRE"),
"Obstructing Justice" = blend$type %in% c("RESIST_OFF_W/O_VIOL", "FLEE/ELUDE_PO/LTS/SR", "OBSTRT/DISGUISE_PERS", "FLEE/ELUDE_PO/LTS/SR"),
"Fraud" = blend$type %in% c("DEFRAUD_INN/0-300", "INS_CLM/FALSE/CONSP", "UTTERING_FORGED_BILL", "ORGANIZED_FRAUD/50K+", "CREDIT_CARD/FORGERY", "ORGANIZED_FRD/0-20K", "DEFRAUD_INN/300+"),
"Probation" = blend$type %in% c("OUT_ON_PROBATION"),
"Public Disorder" = blend$type %in% c("INDECENT_EXPOSURE", "URINATE/DEFE/PUB_PLA", "LOITERING_OR_PROWL", "PANHANDLING/BEG/SOL", "PANHANDLE/AGGR/OBSTR", "L&L_EXHIB_<16_BY_18>"),
"Violating Regulation" = blend$type%in% c("DWLS/KNOWINGLY", "EMER/COMM/911/MISUSE", "FLS_NAME/ID/AFT_ARRE", "REG/EXP/>6MOS/SUB_OF", "NO_VALID_DRIVERS_LIC", "DWLS/HABITUAL", "REG/ADDR_CHANGE", "ID/USE_TO_HARASS"),
.default = "Miscellaneous"
))
blend_count <- blend %>% count(type, sort = T)
blend_count %>%
#slice(21:50) %>%
mutate(share = n/sum(n),
c1 = reorder(type,share)) %>%
ggplot(aes(x=type,y=share, fill = type)) + geom_col() +
coord_flip() +
xlab("Categories") +
ylab("Percentage") +
theme(legend.position='none')
blend_count %>%
slice(1:20) %>%
mutate(share = n/sum(n),
c1 = reorder(type,share)) %>%
ggplot(aes(x=type,y=share, fill = type)) + geom_col() +
coord_flip() +
xlab("Categories") +
ylab("Percentage") +
theme(legend.position='none')
blend$type
blend_count %>%
slice(1:20) %>%
mutate(share = n/sum(n, na.rm = T),
c1 = reorder(type,share)) %>%
ggplot(aes(x=type,y=share, fill = type)) + geom_col() +
coord_flip() +
xlab("Categories") +
ylab("Percentage") +
theme(legend.position='none')
b <- subset(blend, is.na(blend$type))
b
blend
b <- subset(blend, !is.na(blend$type))
b$type
blend_count <- b %>% count(type, sort = T)
blend_count %>%
slice(1:20) %>%
mutate(share = n/sum(n),
c1 = reorder(type,share)) %>%
ggplot(aes(x=type,y=share, fill = type)) + geom_col() +
coord_flip() +
xlab("Categories") +
ylab("Percentage") +
theme(legend.position='none')
blend_count %>%
slice(21:50) %>%
mutate(share = n/sum(n),
c1 = reorder(type,share)) %>%
ggplot(aes(x=type,y=share, fill = type)) + geom_col() +
coord_flip() +
xlab("Categories") +
ylab("Percentage") +
theme(legend.position='none')
blend_count %>%
slice(51:60) %>%
mutate(share = n/sum(n),
c1 = reorder(type,share)) %>%
ggplot(aes(x=type,y=share, fill = type)) + geom_col() +
coord_flip() +
xlab("Categories") +
ylab("Percentage") +
theme(legend.position='none')
blend_count %>%
slice(1:50) %>%
mutate(share = n/sum(n),
c1 = reorder(type,share)) %>%
ggplot(aes(x=type,y=share, fill = type)) + geom_col() +
coord_flip() +
xlab("Categories") +
ylab("Percentage") +
theme(legend.position='none')
b <- subset(blend, !is.na(blend$categories))
blend_count <- b %>% count(categories, sort = T)
blend_count %>%
slice(1:50) %>%
mutate(share = n/sum(n),
c1 = reorder(categories,share)) %>%
ggplot(aes(x=categories,y=share, fill = categories)) + geom_col() +
coord_flip() +
xlab("Categories") +
ylab("Percentage") +
theme(legend.position='none')
b[b$categories == "Miscellaneous"]
b$categories
b[b$categories == "Miscellaneous"]
b[b$categories == "Miscellaneous"]
c$charge1
str(b)
charges_count <- b %>% count(type, sort = T)
charges_count %>%
slice(1:50) %>%
mutate(share = n/sum(n),
c1 = reorder(type,share)) %>%
ggplot(aes(x=type,y=share, fill = type)) + geom_col() +
coord_flip() +
xlab("Types of Charges") +
ylab("Percentage") +
theme(legend.position='none')
#################Univarate Viz#################################
#cat_count <- c %>% count(charge_categories1, charge_categories2, charge_categories3, sort = T)
b <- subset(blend, !is.na(blend$type))
charges_count <- b %>% count(type, sort = T)
charges_count %>%
slice(1:50) %>%
mutate(share = n/sum(n),
c1 = reorder(type,share)) %>%
ggplot(aes(x=type,y=share, fill = type)) + geom_col() +
coord_flip() +
xlab("Types of Charges") +
ylab("Percentage") +
theme(legend.position='none')
b <- subset(blend, !is.na(blend$categories))
blend_count <- b %>% count(categories, sort = T)
blend_count %>%
slice(1:50) %>%
mutate(share = n/sum(n),
c1 = reorder(categories,share)) %>%
ggplot(aes(x=categories,y=share, fill = categories)) + geom_col() +
coord_flip() +
xlab("Categories") +
ylab("Percentage") +
theme(legend.position='none')
library(readxl)
library(tidyr)
library(dplyr)
library(plotly)
library(plyr)
library(stringr)
library(forcats)
VCM <- read.csv("Visitors.csv")
VCM2 <- VCM
drop <- c("visitor_id", "first_name", "last_name", "email", "visitor_type", "affiliate", "newsletter_subcription", "Survey created at", "Survey modified at", NA, "NA.1")
VCM <- VCM[ , !(names(VCM) %in% drop)]
VCM <- VCM[VCM$has_filled_survey == "Yes",]
colnames(VCM) <- c("V-Count", "Opt-In?", "Survey?", "Primary Role", "Biz Stage", "Gender", "C-Country", "Zip", "C-City", "O-Country", "O-City", "Age",
"B-Day", "Asian", "Black", "Hispanic", "White", "Other", "Timestamp1", "Timestamp2")
setwd("~/Desktop/Datasets/Applications/VCMDash/MarkII")
VCM <- read.csv("Visitors.csv")
VCM2 <- VCM
drop <- c("visitor_id", "first_name", "last_name", "email", "visitor_type", "affiliate", "newsletter_subcription", "Survey created at", "Survey modified at", NA, "NA.1")
VCM <- VCM[ , !(names(VCM) %in% drop)]
VCM <- VCM[VCM$has_filled_survey == "Yes",]
colnames(VCM) <- c("V-Count", "Opt-In?", "Survey?", "Primary Role", "Biz Stage", "Gender", "C-Country", "Zip", "C-City", "O-Country", "O-City", "Age",
"B-Day", "Asian", "Black", "Hispanic", "White", "Other", "Timestamp1", "Timestamp2")
VCM$Zip <- as.factor(VCM$Zip)
VCM$`O-City`<- as.factor(VCM$`O-City`)
VCM$`O-Country` <- as.factor(VCM$`O-Country`)
VCM$Age<- as.factor(VCM$Age)
#VCM$Age <- factor(VCM$Age, exclude = "")
VCM$`Primary Role` <- as.factor(VCM$`Primary Role`)
VCM$`Primary Role` <- fct_lump(VCM$`Primary Role`, other_level = "Other", n = 5)
VCM$`Biz Stage` <- as.factor(VCM$`Biz Stage`)
VCM$Ethnicity <- paste(VCM$White, VCM$Black, VCM$Other, VCM$Asian, VCM$Hispanic)
VCM$Ethnicity <- gsub("NA", "", VCM$Ethnicity)
VCM$Ethnicity <- str_trim(VCM$Ethnicity)
VCM$Ethnicity <- fct_collapse(VCM$Ethnicity, MultiCultural = c("Caucasian / White    Hispanic or Latino",
"African American / Black   Hispanic or Latino",
"Caucasian / White African American / Black",
"nativeamerican/mixed",
"African American / Black Native American",
"Brazilian",
"Moroccan",
"Asian/Pacific Islander",
"Asian/Pacific Islander Hispanic or Latino",
"mixed",
"arabic",
"Middle Eastern",
"European",
"Multiethnic (Hispanic & White)",
"Caucasian / White African American / Black Native American"),
Other = c("Cool",
"aboriginal australian",
"european",
"Greek",
"Human",
"Sorry"),
Jewish = c("Jewish",
"Hebrew Israelite"),
White = c("white",
"Caucasian / White"),
Black = c("African American / Black",
"African American / Black Haitian",
"Jamiacan"))
Veterans <- VCM %>%
filter(V-Count > 14)
Veterans <- VCM %>%
filter(VCM$V-Count > 14)
Veterans <- VCM %>%
filter(VCM$`V-Count` > 14)
head(Veterans)
tail(Veterans)
Veterans <- VCM %>%
filter(VCM$`V-Count` > 14 && VCM$Zip == 33136)
Overtown <- VCM %>%
filter(Zip == 33136)
write.csv(Overtown, file = "Overtown Visitors")
VCM <- read.csv("Visitors (Q2 2018).csv")
VCM2 <- VCM
drop <- c("visitor_id", "first_name", "last_name", "email", "visitor_type", "affiliate", "newsletter_subcription", "Survey created at", "Survey modified at", NA, "NA.1")
VCM <- VCM[ , !(names(VCM) %in% drop)]
VCM <- VCM[VCM$has_filled_survey == "Yes",]
colnames(VCM) <- c("V-Count", "Opt-In?", "Survey?", "Primary Role", "Biz Stage", "Gender", "C-Country", "Zip", "C-City", "O-Country", "O-City", "Age",
"B-Day", "Asian", "Black", "Hispanic", "White", "Other", "Timestamp1", "Timestamp2")
VCM$Zip <- as.factor(VCM$Zip)
VCM$`O-City`<- as.factor(VCM$`O-City`)
VCM$`O-Country` <- as.factor(VCM$`O-Country`)
VCM$Age<- as.factor(VCM$Age)
#VCM$Age <- factor(VCM$Age, exclude = "")
VCM$`Primary Role` <- as.factor(VCM$`Primary Role`)
VCM$`Primary Role` <- fct_lump(VCM$`Primary Role`, other_level = "Other", n = 5)
VCM$`Biz Stage` <- as.factor(VCM$`Biz Stage`)
VCM$Ethnicity <- paste(VCM$White, VCM$Black, VCM$Other, VCM$Asian, VCM$Hispanic)
VCM$Ethnicity <- gsub("NA", "", VCM$Ethnicity)
VCM$Ethnicity <- str_trim(VCM$Ethnicity)
VCM$Ethnicity <- fct_collapse(VCM$Ethnicity, MultiCultural = c("Caucasian / White    Hispanic or Latino",
"African American / Black   Hispanic or Latino",
"Caucasian / White African American / Black",
"nativeamerican/mixed",
"African American / Black Native American",
"Brazilian",
"Moroccan",
"Asian/Pacific Islander",
"Asian/Pacific Islander Hispanic or Latino",
"mixed",
"arabic",
"Middle Eastern",
"European",
"Multiethnic (Hispanic & White)",
"Caucasian / White African American / Black Native American"),
Other = c("Cool",
"aboriginal australian",
"european",
"Greek",
"Human",
"Sorry"),
Jewish = c("Jewish",
"Hebrew Israelite"),
White = c("white",
"Caucasian / White"),
Black = c("African American / Black",
"African American / Black Haitian",
"Jamiacan"))
#Percentage for Ethnicity
#VCM <- VCM %>%
# group_by(Ethnicity) %>%
#summarise(count=n()) %>%
#mutate(perc=count/sum(count))
head(VCM)
#Source File and Clean
VCM <- read.csv("Visitors (Q2 2018).csv")
head(VCM)
#Source File and Clean
VCM <- read.csv("Visitors (Q2 2018).csv", sep = "\t")
head(VCM)
drop <- c("visitor_id", "first_name", "last_name", "email", "visitor_type", "affiliate", "newsletter_subcription", "Survey created at", "Survey modified at", NA, "NA.1")
VCM <- VCM[ , !(names(VCM) %in% drop)]
VCM <- VCM[VCM$has_filled_survey == "Yes",]
colnames(VCM) <- c("V-Count", "Opt-In?", "Survey?", "Primary Role", "Biz Stage", "Gender", "C-Country", "Zip", "C-City", "O-Country", "O-City", "Age",
"B-Day", "Asian", "Black", "Hispanic", "White", "Other", "Timestamp1", "Timestamp2")
VCM$Zip <- as.factor(VCM$Zip)
VCM$`O-City`<- as.factor(VCM$`O-City`)
VCM$`O-Country` <- as.factor(VCM$`O-Country`)
VCM$Age<- as.factor(VCM$Age)
#VCM$Age <- factor(VCM$Age, exclude = "")
VCM$`Primary Role` <- as.factor(VCM$`Primary Role`)
VCM$`Primary Role` <- fct_lump(VCM$`Primary Role`, other_level = "Other", n = 5)
VCM$`Biz Stage` <- as.factor(VCM$`Biz Stage`)
#Fixed Strings in Multiple Columns
VCM$Ethnicity <- paste(VCM$White, VCM$Black, VCM$Other, VCM$Asian, VCM$Hispanic)
VCM$Ethnicity <- gsub("NA", "", VCM$Ethnicity)
VCM$Ethnicity <- str_trim(VCM$Ethnicity)
VCM$Ethnicity <- fct_collapse(VCM$Ethnicity, MultiCultural = c("Caucasian / White    Hispanic or Latino",
"African American / Black   Hispanic or Latino",
"Caucasian / White African American / Black",
"nativeamerican/mixed",
"African American / Black Native American",
"Brazilian",
"Moroccan",
"Asian/Pacific Islander",
"Asian/Pacific Islander Hispanic or Latino",
"mixed",
"arabic",
"Middle Eastern",
"European",
"Multiethnic (Hispanic & White)",
"Caucasian / White African American / Black Native American"),
Other = c("Cool",
"aboriginal australian",
"european",
"Greek",
"Human",
"Sorry"),
Jewish = c("Jewish",
"Hebrew Israelite"),
White = c("white",
"Caucasian / White"),
Black = c("African American / Black",
"African American / Black Haitian",
"Jamiacan"))
Veterans <- VCM %>%
filter(VCM$`V-Count` > 14)
Overtown <- VCM %>%
filter(Zip == 33136)
write(Overtown, file = "Overtown Visitors")
write(Overtown, file = Overtown Visitors)
write.csv(Ovetown, file = "Overtown Visitors")
write.csv(Overtown, file = "Overtown Visitors")
write.csv(Veterans, file = "Veterans (Q2 2018)")
View(Overtown)
View(Overtown)
View(Overtown)
View(Veterans)
View(Veterans)
View(VCM)
View(VCM)
str(VCM)
str(VCM2)
count(Overtown)
count(Overtown$`V-Count`)
